class Solution:
    def numBusesToDestination(self, routes: List[List[int]], S: int, T: int) -> int:
        if S == T:
            return 0
        
        buses = collections.defaultdict(list)
        for i, route in enumerate(routes):
            for stop in route:
                buses[stop].append(i)
           
        
        visited_bus = set()
        visited_stop = set()
        queue = collections.deque([S])
        visited_stop.add(S)
        
        count = 0 
        
        while queue:
            
            for i in range(len(queue)):
                stop = queue.popleft()
                if stop == T:
                    return count 
                    
                for bus in buses[stop]:
                    if bus in visited_bus:
                        continue 
                    
                    visited_bus.add(bus)
                    for next_stop in routes[bus]:
                        if next_stop not in visited_stop:
                            visited_stop.add(next_stop)
                            queue.append(next_stop)
                        
            count += 1 
            
        return -1
