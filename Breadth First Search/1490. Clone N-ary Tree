"""
# Definition for a Node.
class Node:
    def __init__(self, val=None, children=None):
        self.val = val
        self.children = children if children is not None else []
"""

class Solution:
    def cloneTree(self, root: 'Node') -> 'Node':
        if not root:
            return None
        
        tree = collections.defaultdict(Node)
        queue = collections.deque([root])
        
        while queue:
            node = queue.popleft()
            tree[node].val = node.val 
            
            for child in node.children:
                queue.append(child)
                tree[child].val = child.val
                tree[node].children.append(tree[child])
        
        return tree[root]
                
                
            
