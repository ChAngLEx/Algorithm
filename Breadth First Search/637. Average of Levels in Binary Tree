class Solution:
    def averageOfLevels(self, root: TreeNode) -> List[float]:
        if not root:
            return []
        
        queue = collections.deque([root])
        averages = []
        
        while queue:
            level = 0
            count = 0
            
            for _ in range(len(queue)):
                node = queue.popleft()
                level += node.val
                count += 1
                
                if node.left:
                    queue.append(node.left)
                if node.right:
                    queue.append(node.right)
            
            averages.append(level / count)
        
        return averages
