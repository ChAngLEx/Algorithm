class Solution:
    def openLock(self, deadends: List[str], target: str) -> int:
        deadends = set(deadends)
        visited = set()
        queue = collections.deque(['0000'])
        visited.add('0000')
        
        step = 0
        
        while queue:
            for _ in range(len(queue)):
                num = queue.popleft()
                
                if num == target:
                    return step
                
                if num in deadends:
                    continue
                
                for i in range(4):
                    left, curt, right = num[:i], int(num[i]), num[i+1:]
                    
                    for next in [(curt + 1) % 10, (curt - 1) % 10]:
                        next_num = left + str(next) + right
                        
                        if next_num in visited:
                            continue
                        
                        queue.append(next_num)
                        visited.add(next_num)
            
            step += 1
        
        return -1
