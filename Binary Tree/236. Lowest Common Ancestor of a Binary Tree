# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None


# 1. root = p or root = q or root = None
# 2. both p, q are in the left subtree
# 3. both p, q are in the right subtree
# 4. one in the left, the other in the right
# 5. p, q are not in this tree, return None
class Solution:
    def lowestCommonAncestor(self, root: 'TreeNode', p: 'TreeNode', q: 'TreeNode') -> 'TreeNode':
        if not root or root == p or root == q:
            return root
        
        left = self.lowestCommonAncestor(root.left, p, q)
        right = self.lowestCommonAncestor(root.right, p, q)
        
        if left and right:
            return root
        
        if left:
            return left
        
        if right:
            return right
        
        return None
