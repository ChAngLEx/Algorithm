# BFS

# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def widthOfBinaryTree(self, root: TreeNode) -> int:
        if not root:
            return 0
        
        queue = collections.deque([(root, 0)])
        max_width = 0
        while queue:
            left = queue[0][1]
            right = left
            for _ in range(len(queue)):
                node, right = queue.popleft()
                
                if node.left:
                    queue.append((node.left, right * 2))
                
                if node.right:
                    queue.append((node.right, right * 2 + 1))
            
            max_width = max(max_width, right - left + 1)
        
        return max_width


#2. DFS
