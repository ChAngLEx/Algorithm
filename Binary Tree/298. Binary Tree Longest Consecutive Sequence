# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def longestConsecutive(self, root: TreeNode) -> int:
        self.res = 0
        self.helper(root, [])
        
        return self.res
        
    def helper(self, root, temp):
        if not root:
            return
        
        if temp and temp[-1] + 1 == root.val:
            temp.append(root.val)
        else:
            temp = [root.val]
        
        self.res = max(self.res, len(temp))
        
        
        self.helper(root.left, temp)
        self.helper(root.right, temp)
        
        temp.pop()
        
