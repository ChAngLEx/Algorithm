
563. Backpack V
中文English
Given n items with size nums[i] which an integer array and all positive numbers. An integer target denotes the size of a backpack. Find the number of possible fill the backpack.

Each item may only be used once

Example
Given candidate items [1,2,3,3,7] and target 7,

A solution set is: 
[7]
[1, 3, 3]
return 2

class Solution:
    """
    @param nums: an integer array and all positive numbers
    @param target: An integer
    @return: An integer
    """
    def backPackV(self, nums, target):
        # write your code here
        # 1 开dp数组
        dp = [[0 for i in range(target + 1)], [0 for i in range(target + 1)]]
        
        # 2 初始化
        dp[0][0] = 1 
        
        # 3 写转移方程
        
        for i in range(1, len(nums) + 1):
        
            for j in range (target + 1):
                
                dp[i%2][j] = dp[(i-1)%2][j]
                if j >= nums[i-1]:
    
                    dp[i%2][j] = dp[(i-1)%2][j-nums[i-1]] + dp[(i-1)%2][j]
        
            
        return dp[(len(nums))%2][-1]
