You are given coins of different denominations and a total amount of money.
Write a function to compute the number of combinations that make up that amount. 
You may assume that you have infinite number of each kind of coin.

 

Example 1:

Input: amount = 5, coins = [1, 2, 5]
Output: 4
Explanation: there are four ways to make up the amount:
5=5
5=2+2+1
5=2+1+1+1
5=1+1+1+1+1

class Solution:
    def change(self, amount: int, coins: List[int]) -> int:
        dp = [[0 for _ in range (amount + 1)] for _ in range(len(coins) + 1)]
        
        dp[0][0] = 1
        
        for i in range(1, len(coins) + 1):
            for j in range(amount + 1):
                dp[i][j] = dp[i-1][j]
                
                if j >= coins[i-1]:
                    dp[i][j] += dp[i][j-coins[i-1]]
        
        return dp[-1][-1]

# 一维
class Solution:
    def change(self, amount: int, coins: List[int]) -> int:
        dp = [0 for _ in range (amount + 1)] 
        
        dp[0] = 1
        
        for i in range(1, len(coins) + 1):
            for j in range(amount + 1):
                dp[j] = dp[j]
                
                if j >= coins[i-1]:
                    dp[j] += dp[j-coins[i-1]]
        
        return dp[-1]
