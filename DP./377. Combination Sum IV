377. Combination Sum IV
Medium

Given an integer array with all positive numbers and no duplicates, 
find the number of possible combinations that add up to a positive integer target.

Example:

nums = [1, 2, 3]
target = 4

The possible combination ways are:
(1, 1, 1, 1)
(1, 1, 2)
(1, 2, 1)
(1, 3)
(2, 1, 1)
(2, 2)
(3, 1)

Note that different sequences are counted as different combinations.

Therefore the output is 7.

class Solution:
    def combinationSum4(self, nums: List[int], target: int) -> int:
        dp = [[0 for _ in range(target + 1)] for _ in range(len(nums) + 1)]
        #dp[0] = 1
        
        for i in range(len(nums) + 1):
            dp[i][0] = 1
        
        
        for j in range(1, target + 1):
            for i in range(1, len(nums) + 1):
                dp[i][j] = dp[i-1][j]
                if j >= nums[i - 1]:

                    dp[i][j] += dp[-1][j - nums[i - 1]]
        
        return dp[-1][-1]
                    
# 一维：

class Solution(object):
    def combinationSum4(self, nums, target):
        """
        :type nums: List[int]
        :type target: int
        :rtype: int
        """
        dp = [0 for _ in range(target + 1)]
        
        dp[0] = 1
        
        for j in range(target + 1):
            for i in range(1, len(nums) + 1):
                
                if j >= nums[i-1]:
                    dp[j] += dp[j-nums[i-1]]
        
        return dp[-1]
