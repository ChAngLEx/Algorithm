#### 比较器


# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
import heapq
ListNode.__lt__ = lambda x, y: (x.val < y.val)

class Solution:
    def mergeKLists(self, lists: List[ListNode]) -> ListNode:
        if not lists:
            return None
        
        heap = []
        for head in lists:
            if head:
                heapq.heappush(heap, head)
        
        dummy = tail = ListNode(0)
     
        while heap:
            head = heapq.heappop(heap)
            tail.next = head
            tail = head
            
            if head.next:
                head = head.next 
                heapq.heappush(heap, head)
        
        return dummy.next
