# reverse linked-list 

# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    # reverse Linked list
    def reverse(self, l):
        pre = None 
        cur = l
        next = cur.next 
        while next:
            cur.next = pre
            pre = cur
            cur = next 
            next = next.next 
        
        cur.next = pre
        return cur
            
    def addTwoNumbers(self, l1: ListNode, l2: ListNode) -> ListNode:
        l1 = self.reverse(l1)
        l2 = self.reverse(l2)
        
        carry = 0
        dummy = tail = ListNode(0)
        while l1 or l2 or carry:
            if l1:
                carry += l1.val
                l1 = l1.next 
            
            if l2:
                carry += l2.val
                l2 = l2.next 
            
            tail.next = ListNode(carry % 10)
            tail = tail.next
            
            carry //= 10
        
        res = self.reverse(dummy.next)
        
        return res
        
