# 1. 遍历地图完成一次搜索，找到所有可消除的部分。标记为负数。
# 2. 消除后，处理掉落部分。

class Solution:
    def candyCrush(self, board: List[List[int]]) -> List[List[int]]:
        if not board or not board[0]:
            return []
        
        found = True
        while found:
            found = False    
            for i in range(len(board)):
                for j in range(len(board[0])):
                    val = abs(board[i][j])
                    
                    if val == 0:
                        continue
                    
                    if j < len(board[0]) - 2 and val == abs(board[i][j + 1]) and val == abs(board[i][j + 2]):
                        found = True
                        cur_j = j
                        
                        while cur_j < len(board[0]) and abs(board[i][cur_j]) == val:
                            board[i][cur_j] = -val
                            cur_j += 1
                    
                    if i < len(board) - 2 and val == abs(board[i + 1][j]) and val == abs(board[i + 2][j]):
                        found = True
                        cur_i = i
                        
                        while cur_i < len(board) and abs(board[cur_i][j]) == val:
                            board[cur_i][j] = -val
                            cur_i += 1
                
            if found:
                for j in range(len(board[0])):
                    index = len(board) - 1
                    
                    for i in range(len(board) - 1, -1, -1):
                        if board[i][j] > 0:
                            board[index][j] = board[i][j]
                            
                            index -= 1
                    
                    for k in range(index, -1, -1):
                        board[k][j] = 0
               
                    #print(board)
        
        return board
